# name: Build Android & iOS

# # Triggered when code is pushed to any branch in a repository
# on: push

# jobs:
#   build-ios:
#     runs-on: macos-latest
#     steps:
#       - uses: actions/checkout@v2
#       - uses: actions/cache@v2
#         with:
#           path: node_modules
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-
#       - uses: actions/cache@v2
#         with:
#           path: ~/Library/Caches/CocoaPods
#           key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-pods-
#       - uses: actions/cache@v2
#         with:
#           path: ~/.cocoapods
#           key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-pods-

#       - run: yarn install --frozen-lockfile

#       - run: pod install
#         working-directory: ios

#       - run: xcodebuild clean archive -workspace testCiCdReactNative.xcworkspace -scheme testCiCdReactNative -archivePath testCiCdReactNative.xcarchive CODE_SIGNING_ALLOWED=NO | xcpretty
#         working-directory: ios

#   build-android:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/setup-node@v3
#         with:
#           node-version: '16.x'  # Pin Node.js version to 16.x to avoid OpenSSL 3 issue

#       - run: |
#           echo "NODE_OPTIONS=--openssl-legacy-provider" >> $GITHUB_ENV

#       - uses: actions/checkout@v2

#       # Gradle Cache https://github.com/actions/cache/blob/main/examples.md#java---gradle
#       - uses: actions/cache@v2
#         with:
#           path: |
#             ~/.gradle/caches
#             ~/.gradle/wrapper
#           key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
#           restore-keys: |
#             ${{ runner.os }}-gradle-

#       # Yarn Cache: https://github.com/actions/cache/blob/master/examples.md#node---yarn
#       - name: Get yarn cache directory path
#         id: yarn-cache-dir-path
#         run: echo "::set-output name=dir::$(yarn cache dir)"

#       - uses: actions/cache@v2
#         id: yarn-cache
#         with:
#           path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
#           key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
#           restore-keys: |
#             ${{ runner.os }}-yarn-

#       - name: Install node dependencies
#         run: yarn install --frozen-lockfile

#       - name: Bundle *.aab & *.apk
#         run: cd android && ./gradlew bundleRelease assembleRelease

#       - name: Upload APK Artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: Apk
#           path: android/app/build/outputs/apk/release/app-release.apk

#       - name: Upload AAB Artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: Aab
#           path: android/app/build/outputs/bundle/release/app-release.aab


#          ////

name: Build Android & iOS

# Triggered when code is pushed to any branch in a repository
on: push

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v2
        with:
          path: ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - uses: actions/cache@v2
        with:
          path: ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - run: yarn install --frozen-lockfile

      - run: pod install
        working-directory: ios

      - run: xcodebuild clean archive -workspace testCiCdReactNative.xcworkspace -scheme testCiCdReactNative -archivePath testCiCdReactNative.xcarchive CODE_SIGNING_ALLOWED=NO | xcpretty
        working-directory: ios

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'  # Pin Node.js version to 16.x to avoid OpenSSL 3 issue

      - run: |
          echo "NODE_OPTIONS=--openssl-legacy-provider" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      # Gradle Cache https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Yarn Cache: https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install node dependencies
        run: yarn install --frozen-lockfile

      - name: Bundle *.aab & *.apk
        run: cd android && ./gradlew bundleRelease assembleRelease

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Apk
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Aab
          path: android/app/build/outputs/bundle/release/app-release.aab

#          ////

name: Build Android & iOS and Upload to S3

on: push

jobs:
  build-ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - uses: actions/cache@v2
        with:
          path: ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - uses: actions/cache@v2
        with:
          path: ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      - run: yarn install --frozen-lockfile

      - run: pod install
        working-directory: ios

      - run: xcodebuild clean archive -workspace testCiCdReactNative.xcworkspace -scheme testCiCdReactNative -archivePath testCiCdReactNative.xcarchive CODE_SIGNING_ALLOWED=NO | xcpretty
        working-directory: ios

  build-android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'  # Pin Node.js version to 16.x to avoid OpenSSL 3 issue

      - run: |
          echo "NODE_OPTIONS=--openssl-legacy-provider" >> $GITHUB_ENV

      - uses: actions/checkout@v2

      # Gradle Cache https://github.com/actions/cache/blob/main/examples.md#java---gradle
      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Yarn Cache: https://github.com/actions/cache/blob/master/examples.md#node---yarn
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install node dependencies
        run: yarn install --frozen-lockfile

      - name: Bundle *.aab & *.apk
        run: cd android && ./gradlew bundleRelease assembleRelease

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Apk
          path: android/app/build/outputs/apk/release/app-release.apk

      - name: Upload AAB Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Aab
          path: android/app/build/outputs/bundle/release/app-release.aab

      # Install AWS CLI
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install awscli -y

      # Set AWS credentials (GitHub Secrets should be used to securely store these)
      - name: Configure AWS credentials
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1  # Set your region here

      # Upload APK and AAB to S3 with timestamped folder
      - name: Upload to S3
        run: |
          TIMESTAMP=$(date +"%Y-%m-%d_%H-%M-%S")
          S3_BUCKET="upload-react-native-apk"
          S3_PATH="builds/$TIMESTAMP/"
          
          echo "Uploading APK to S3..."
          aws s3 cp android/app/build/outputs/apk/release/app-release.apk s3://$S3_BUCKET/$S3_PATH/app-release.apk
          
          echo "Uploading AAB to S3..."
          aws s3 cp android/app/build/outputs/bundle/release/app-release.aab s3://$S3_BUCKET/$S3_PATH/app-release.aab
